CREATE TABLE Users (
    User_ID int  PRIMARY KEY identity (1,1) ,
    Name VARCHAR(255) NOT NULL,
    Email_Address VARCHAR(255) UNIQUE NOT NULL,
    Password VARCHAR(255) NOT NULL,  
    DateOfBirth DATE,
    Date_Created DATE ,
    Role VARCHAR(20) NOT NULL,
    CHECK (Role IN ('Admin', 'Student', 'Teacher', 'Form_Tutor'))  
);


CREATE TABLE Admin (
    Admin_ID VARCHAR(255) PRIMARY KEY,
    Name VARCHAR(255) NOT NULL,
    Email_Address VARCHAR(255) UNIQUE NOT NULL,
    DateOfBirth DATE,
    Date_Created DATE
);


CREATE TABLE Subjects (
    Subject_ID VARCHAR(255) PRIMARY KEY,
    Subject_Name VARCHAR(255) NOT NULL
);


CREATE TABLE Subject_Teachers (
    Teacher_ID VARCHAR(255) PRIMARY KEY,
    User_ID VARCHAR(255),
    Subject_ID VARCHAR(255),
    FOREIGN KEY (User_ID) REFERENCES Users(User_ID),
    FOREIGN KEY (Subject_ID) REFERENCES Subjects(Subject_ID)
);


CREATE TABLE Students (
    Student_ID VARCHAR(255) PRIMARY KEY,
    User_ID VARCHAR(255),
    Subject_ID VARCHAR(255),
    FOREIGN KEY (User_ID) REFERENCES Users(User_ID),
    FOREIGN KEY (Subject_ID) REFERENCES Subjects(Subject_ID)
);
CREATE TABLE Predicted_Grades (
    Predicted_Grades_ID VARCHAR(255) PRIMARY KEY,
    Subject_Teacher_ID VARCHAR(255),
    Student_ID VARCHAR(255),
    Date DATE,
    Grade VARCHAR(10),
    FOREIGN KEY (Subject_Teacher_ID) REFERENCES Subject_Teachers(Teacher_ID),
    FOREIGN KEY (Student_ID) REFERENCES Students(Student_ID)
);


CREATE TABLE Form_Tutors (
    Form_Tutor_ID VARCHAR(255) PRIMARY KEY,
    User_ID VARCHAR(255),
    Student_ID VARCHAR(255),
    Subject_Teacher_ID VARCHAR(255),
    FOREIGN KEY (User_ID) REFERENCES Users(User_ID),
    FOREIGN KEY (Student_ID) REFERENCES Students(Student_ID),
    FOREIGN KEY (Subject_Teacher_ID) REFERENCES Subject_Teachers(Teacher_ID)
);


CREATE TABLE ReferencesTable (
    Reference_ID VARCHAR(255) PRIMARY KEY,
    Student_ID VARCHAR(255),
    Form_Tutor_ID VARCHAR(255),
    Subject_Teacher_ID VARCHAR(255),
    Date DATE,
    Content TEXT,
    FOREIGN KEY (Student_ID) REFERENCES Students(Student_ID),
    FOREIGN KEY (Form_Tutor_ID) REFERENCES Form_Tutors(Form_Tutor_ID),
    FOREIGN KEY (Subject_Teacher_ID) REFERENCES Subject_Teachers(Teacher_ID)
);

	
